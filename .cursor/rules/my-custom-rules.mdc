# Heartscribe - 감정 대필 사무소 개발 규칙

## 프로젝트 개요
- **프로젝트명**: Heartscribe (감정 대필 사무소)
- **기술 스택**: Vite + React + TypeScript + Zustand + TailwindCSS
- **목적**: AI 기반 감정 편지 생성 서비스

## 코딩 규칙

### 1. 파일 구조
```
src/
├── components/     # 재사용 가능한 컴포넌트
├── pages/         # 페이지 컴포넌트
├── store/         # Zustand 스토어
├── types/         # TypeScript 타입 정의
├── services/      # API 서비스
├── utils/         # 유틸리티 함수
└── hooks/         # 커스텀 훅
```

### 2. 네이밍 컨벤션
- **컴포넌트**: PascalCase (예: `CreateLetter.tsx`)
- **파일명**: kebab-case 또는 PascalCase
- **변수/함수**: camelCase
- **상수**: UPPER_SNAKE_CASE
- **타입**: PascalCase (예: `LetterFormData`)

### 3. 컴포넌트 작성 규칙
- 함수형 컴포넌트 사용
- TypeScript 타입 명시
- Props 인터페이스 정의
- React.FC 타입 사용

### 4. 상태 관리
- Zustand 스토어 사용
- 스토어는 `src/store/` 디렉토리에 위치
- 타입 정의는 `src/types/` 디렉토리에 위치

### 5. 스타일링
- TailwindCSS 클래스 사용
- 커스텀 CSS는 `src/index.css`에 정의
- 반응형 디자인 고려

### 6. 에러 처리
- try-catch 블록 사용
- 사용자 친화적인 에러 메시지
- 로딩 상태 관리

### 7. 접근성
- 시맨틱 HTML 사용
- 적절한 label 태그 사용
- 키보드 네비게이션 지원

## 기능 요구사항

### 감정 타입
- 사과, 고백, 퇴사, 생일축하, 감사, 위로, 격려, 기타

### 문체 옵션
- 정중한, 친근한, 격식있는, 감성적인, 간결한

### 길이 옵션
- 짧은, 보통, 긴

## API 연동
- GPT-4 API 사용 예정
- `/services/openai.ts`에서 구현
- 환경변수로 API 키 관리

## UI/UX 가이드라인
- 감성적이고 따뜻한 색상 사용
- 직관적인 사용자 인터페이스
- 모바일 친화적 디자인
- 로딩 상태 및 피드백 제공
description:
globs:
alwaysApply: false
---
